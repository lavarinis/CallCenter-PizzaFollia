{"version":3,"sources":["createSharedElementStackNavigator.tsx"],"names":["React","hoistNonReactStatics","SharedElementRendererView","SharedElementRendererData","createSharedElementScene","SharedElementRendererContext","SharedElementRendererProxy","getActiveRouteState","createSharedElementEnabledNavigator","createNavigator","routeConfigs","navigatorConfig","rendererData","wrappedRouteConfigs","key","routeConfig","component","screen","wrappedComponent","onTransitionStart","transitionProps","prevTransitionProps","index","position","prevIndex","startTransition","interpolate","inputRange","outputRange","scene","route","onTransitionEnd","endTransition","createSharedElementStackNavigator","RouteConfigs","NavigatorConfig","rendererDataProxy","SharedElementNavigator","SharedElementRenderer","source","props","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport SharedElementRendererView from './SharedElementRendererView';\nimport SharedElementRendererData, {\n  ISharedElementRendererData,\n} from './SharedElementRendererData';\nimport createSharedElementScene from './createSharedElementScene';\nimport SharedElementRendererContext from './SharedElementRendererContext';\nimport { SharedElementRendererProxy } from './SharedElementRendererProxy';\nimport { getActiveRouteState } from './utils';\n\nfunction createSharedElementEnabledNavigator(\n  createNavigator: any,\n  routeConfigs: any,\n  navigatorConfig: any,\n  rendererData: ISharedElementRendererData\n) {\n  const wrappedRouteConfigs = {\n    ...routeConfigs,\n  };\n  for (const key in routeConfigs) {\n    let routeConfig = wrappedRouteConfigs[key];\n    const component =\n      typeof routeConfig === 'object' && routeConfig.screen\n        ? routeConfig.screen\n        : routeConfig;\n    const wrappedComponent = createSharedElementScene(component, rendererData);\n    if (component === routeConfig) {\n      wrappedRouteConfigs[key] = wrappedComponent;\n    } else {\n      wrappedRouteConfigs[key] = {\n        ...routeConfig,\n        screen: wrappedComponent,\n      };\n    }\n  }\n\n  return createNavigator(wrappedRouteConfigs, {\n    ...navigatorConfig,\n    onTransitionStart: (transitionProps: any, prevTransitionProps: any) => {\n      const { index, position } = transitionProps;\n      const prevIndex = prevTransitionProps.index;\n      if (index === prevIndex) return;\n      rendererData.startTransition(\n        position.interpolate({\n          inputRange: [index - 1, index],\n          outputRange: index > prevIndex ? [0, 1] : [2, 1],\n        }),\n        getActiveRouteState(transitionProps.scene.route),\n        getActiveRouteState(prevTransitionProps.scene.route)\n      );\n      if (navigatorConfig && navigatorConfig.onTransitionStart) {\n        navigatorConfig.onTransitionStart(\n          getActiveRouteState(transitionProps.scene.route),\n          getActiveRouteState(prevTransitionProps.scene.route)\n        );\n      }\n    },\n    onTransitionEnd: (transitionProps: any, prevTransitionProps: any) => {\n      rendererData.endTransition(\n        transitionProps.scene.route,\n        prevTransitionProps.scene.route\n      );\n      if (navigatorConfig && navigatorConfig.onTransitionEnd) {\n        navigatorConfig.onTransitionEnd(transitionProps, prevTransitionProps);\n      }\n    },\n  });\n}\n\nfunction createSharedElementStackNavigator(\n  createNavigator: any,\n  RouteConfigs: any,\n  NavigatorConfig: any\n): React.ComponentType<any> {\n  // Create a proxy which is later updated to link\n  // to the renderer\n  const rendererDataProxy = new SharedElementRendererProxy();\n\n  //const rendererData = new SharedElementRendererData();\n  const SharedElementNavigator = createSharedElementEnabledNavigator(\n    createNavigator,\n    RouteConfigs,\n    NavigatorConfig,\n    rendererDataProxy\n  );\n\n  class SharedElementRenderer extends React.Component {\n    private rendererData?: SharedElementRendererData;\n    render() {\n      return (\n        <SharedElementRendererContext.Consumer>\n          {rendererData => {\n            // In case a renderer is already present higher up in the chain\n            // then don't bother creating a renderer here, but use that one instead\n            if (rendererData) {\n              rendererDataProxy.source = rendererData;\n              return <SharedElementNavigator {...this.props} />;\n\n              // Create/use our own renderer here\n            } else {\n              this.rendererData =\n                this.rendererData || new SharedElementRendererData();\n              rendererDataProxy.source = this.rendererData;\n              return (\n                <SharedElementRendererContext.Provider\n                  value={this.rendererData}\n                >\n                  <SharedElementNavigator {...this.props} />\n                  <SharedElementRendererView rendererData={this.rendererData} />\n                </SharedElementRendererContext.Provider>\n              );\n            }\n          }}\n        </SharedElementRendererContext.Consumer>\n      );\n    }\n  }\n  hoistNonReactStatics(SharedElementRenderer, SharedElementNavigator);\n  return SharedElementRenderer;\n}\n\nexport default createSharedElementStackNavigator;\n"]}