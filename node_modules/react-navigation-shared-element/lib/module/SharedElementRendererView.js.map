{"version":3,"sources":["SharedElementRendererView.tsx"],"names":["React","View","StyleSheet","SharedElementTransition","SharedElementRendererView","subscription","props","rendererData","addUpdateListener","forceUpdate","remove","undefined","transitions","getTransitions","absoluteFill","map","transitionProps","index","PureComponent"],"mappings":"ofAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,IAAT,CAAeC,UAAf,KAAiC,cAAjC,CACA,OAASC,uBAAT,KAAwC,6BAAxC,C,GAQqBC,CAAAA,yB,4XAKC,gBAClB,KAAKC,YAAL,CAAoB,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,iBAAxB,CAA0C,UAAM,CAClE,KAAI,CAACC,WAAL,GACD,CAFmB,CAApB,CAGD,C,mEAEsB,CACrB,GAAI,KAAKJ,YAAT,CAAuB,CACrB,KAAKA,YAAL,CAAkBK,MAAlB,GACA,KAAKL,YAAL,CAAoBM,SAApB,CACD,CACF,C,uCAEQ,CACP,GAAMC,CAAAA,WAAW,CAAG,KAAKN,KAAL,CAAWC,YAAX,CAAwBM,cAAxB,EAApB,CAEA,MACE,qBAAC,IAAD,EAAM,KAAK,CAAEX,UAAU,CAACY,YAAxB,CAAsC,aAAa,CAAC,MAApD,iDACGF,WAAW,CAACG,GAAZ,CAAgB,SAACC,eAAD,CAAkBC,KAAlB,QACf,qBAAC,uBAAD,WAAyB,GAAG,CAAEA,KAA9B,EAAyCD,eAAzC,mDADe,EAAhB,CADH,CADF,CAOD,C,uCA5BoDhB,KAAK,CAACkB,a,SAAxCd,yB","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { SharedElementTransition } from 'react-native-shared-element';\nimport SharedElementRendererData from './SharedElementRendererData';\nimport { SharedElementEventSubscription } from './types';\n\ntype PropsType = {\n  rendererData: SharedElementRendererData;\n};\n\nexport default class SharedElementRendererView extends React.PureComponent<\n  PropsType\n> {\n  private subscription?: SharedElementEventSubscription;\n\n  componentDidMount() {\n    this.subscription = this.props.rendererData.addUpdateListener(() => {\n      this.forceUpdate();\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      this.subscription.remove();\n      this.subscription = undefined;\n    }\n  }\n\n  render() {\n    const transitions = this.props.rendererData.getTransitions();\n    // console.log('SharedElementRendererView.render: ', transitions);\n    return (\n      <View style={StyleSheet.absoluteFill} pointerEvents=\"none\">\n        {transitions.map((transitionProps, index) => (\n          <SharedElementTransition key={index} {...transitionProps} />\n        ))}\n      </View>\n    );\n  }\n}\n"]}