{"version":3,"sources":["SharedElement.tsx"],"names":["React","SharedElement","RawSharedElement","SharedElementSceneContext","props","node","sharedId","sceneData","onSetNode","removeNode","addNode","id","otherProps","Component"],"mappings":"6jBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,aAAa,GAAIC,CAAAA,gBAA1B,KAAkD,6BAAlD,CAEA,MAAOC,CAAAA,yBAAP,KAAsC,6BAAtC,C,GASMF,CAAAA,a,sEAKJ,uBAAYG,KAAZ,CAAuC,+CACrC,+EAAMA,KAAN,GADqC,MAJ/BC,IAI+B,CAJE,IAIF,OAH/BC,QAG+B,CAHZ,EAGY,OAF/BC,SAE+B,CAFY,IAEZ,OAqC/BC,SArC+B,CAqCnB,SAACH,IAAD,CAAoC,CACtD,GAAI,MAAKA,IAAL,GAAcA,IAAlB,CAAwB,CACtB,OACD,CACD,GAAI,MAAKE,SAAL,EAAkB,MAAKF,IAAvB,EAA+B,MAAKC,QAAxC,CAAkD,CAChD,MAAKC,SAAL,CAAeE,UAAf,CAA0B,MAAKH,QAA/B,CAAyC,MAAKD,IAA9C,EACD,CACD,MAAKA,IAAL,CAAYA,IAAZ,CACA,GAAI,MAAKE,SAAL,EAAkB,MAAKF,IAAvB,EAA+B,MAAKC,QAAxC,CAAkD,CAChD,MAAKC,SAAL,CAAeG,OAAf,CAAuB,MAAKJ,QAA5B,CAAsC,MAAKD,IAA3C,EACD,CACD,MAAKA,IAAL,CAAYA,IAAZ,CACD,CAjDsC,CAErC,MAAKC,QAAL,CAAgBF,KAAK,CAACO,EAAtB,CAFqC,aAGtC,C,iEAEQ,iCAIH,KAAKP,KAJF,CAELO,EAFK,aAELA,EAFK,CAGFC,UAHE,8CAKP,MACE,qBAAC,yBAAD,CAA2B,QAA3B,kDACG,SAAAL,SAAS,CAAI,CAKZ,MAAI,CAACA,SAAL,CAAiBA,SAAjB,CACA,MAAO,qBAAC,gBAAD,aAAsBK,UAAtB,EAAkC,MAAM,CAAE,MAAI,CAACJ,SAA/C,kDAAP,CACD,CARH,CADF,CAYD,C,+DAEoB,IACXG,CAAAA,EADW,CACJ,KAAKP,KADD,CACXO,EADW,CAEnB,GAAI,KAAKL,QAAL,GAAkBK,EAAtB,CAA0B,CACxB,GAAI,KAAKJ,SAAL,EAAkB,KAAKD,QAAvB,EAAmC,KAAKD,IAA5C,CAAkD,CAChD,KAAKE,SAAL,CAAeE,UAAf,CAA0B,KAAKH,QAA/B,CAAyC,KAAKD,IAA9C,EACD,CACD,KAAKC,QAAL,CAAgBK,EAAhB,CACA,GAAI,KAAKJ,SAAL,EAAkB,KAAKD,QAAvB,EAAmC,KAAKD,IAA5C,CAAkD,CAChD,KAAKE,SAAL,CAAeG,OAAf,CAAuB,KAAKJ,QAA5B,CAAsC,KAAKD,IAA3C,EACD,CACF,CACF,C,2BAxCyBL,KAAK,CAACa,S,EAyDlC,cAAeZ,CAAAA,aAAf","sourcesContent":["import * as React from 'react';\nimport { SharedElement as RawSharedElement } from 'react-native-shared-element';\nimport { SharedElementNode } from './types';\nimport SharedElementSceneContext from './SharedElementSceneContext';\nimport SharedElementSceneData from './SharedElementSceneData';\n// import invariant from '../utils/invariant';\n\nexport type SharedElementProps = {\n  id: string;\n  children: React.ReactNode;\n};\n\nclass SharedElement extends React.Component<SharedElementProps> {\n  private node: SharedElementNode | null = null;\n  private sharedId: string = '';\n  private sceneData: SharedElementSceneData | null = null;\n\n  constructor(props: SharedElementProps) {\n    super(props);\n    this.sharedId = props.id;\n  }\n\n  render() {\n    const {\n      id, //eslint-disable-line @typescript-eslint/no-unused-vars\n      ...otherProps\n    } = this.props;\n    return (\n      <SharedElementSceneContext.Consumer>\n        {sceneData => {\n          /*invariant(\n            sceneData != null,\n            'The SharedElementSceneContext is not set, did you forget to wrap your scene component with `createSharedElementScene(..)`?'\n          );*/\n          this.sceneData = sceneData;\n          return <RawSharedElement {...otherProps} onNode={this.onSetNode} />;\n        }}\n      </SharedElementSceneContext.Consumer>\n    );\n  }\n\n  componentDidUpdate() {\n    const { id } = this.props;\n    if (this.sharedId !== id) {\n      if (this.sceneData && this.sharedId && this.node) {\n        this.sceneData.removeNode(this.sharedId, this.node);\n      }\n      this.sharedId = id;\n      if (this.sceneData && this.sharedId && this.node) {\n        this.sceneData.addNode(this.sharedId, this.node);\n      }\n    }\n  }\n\n  private onSetNode = (node: SharedElementNode | null) => {\n    if (this.node === node) {\n      return;\n    }\n    if (this.sceneData && this.node && this.sharedId) {\n      this.sceneData.removeNode(this.sharedId, this.node);\n    }\n    this.node = node;\n    if (this.sceneData && this.node && this.sharedId) {\n      this.sceneData.addNode(this.sharedId, this.node);\n    }\n    this.node = node;\n  };\n}\n\nexport default SharedElement;\n"]}