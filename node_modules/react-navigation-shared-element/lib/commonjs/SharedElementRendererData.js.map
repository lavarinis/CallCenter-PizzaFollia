{"version":3,"sources":["SharedElementRendererData.tsx"],"names":["getSharedElements","sceneData","otherSceneData","showing","sharedElements","Component","navigation","NO_SHARED_ELEMENTS","SharedElementRendererData","scenes","updateSubscribers","Set","isShowing","route","prevRoute","scene","prevScene","animValue","updateSceneListeners","updateSharedElements","registerScene","push","subscription","length","splice","remove","forEach","sceneRoute","isActive","key","addUpdateListener","emitUpdateEvent","find","sc","undefined","prevSceneRoute","handler","add","delete","map","id","otherId","other","startId","endId","position","start","ancestor","getAncestor","node","getNode","end"],"mappings":"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","sourcesContent":["import SharedElementSceneData from './SharedElementSceneData';\nimport {\n  SharedElementEventSubscription,\n  SharedElementsStrictConfig,\n  SharedElementAnimatedValue,\n  SharedElementTransitionProps,\n  Route,\n} from './types';\nimport { normalizeSharedElementsConfig } from './utils';\n\nexport type SharedElementRendererUpdateHandler = () => any;\n\nexport interface ISharedElementRendererData {\n  startTransition(\n    animValue: SharedElementAnimatedValue,\n    route: Route,\n    prevRoute: Route\n  ): void;\n  endTransition(route: Route, prevRoute: Route): void;\n  willActivateScene(sceneData: SharedElementSceneData, route: Route): void;\n  didActivateScene(sceneData: SharedElementSceneData, route: Route): void;\n}\n\nfunction getSharedElements(\n  sceneData: SharedElementSceneData,\n  otherSceneData: SharedElementSceneData,\n  showing: boolean\n): SharedElementsStrictConfig | null {\n  const { sharedElements } = sceneData.Component;\n  if (!sharedElements) return null;\n  return normalizeSharedElementsConfig(\n    sharedElements(sceneData.navigation, otherSceneData.navigation, showing)\n  );\n}\n\nconst NO_SHARED_ELEMENTS: any[] = [];\n\ntype SceneRoute = {\n  scene: SharedElementSceneData;\n  route: Route;\n  subscription: SharedElementEventSubscription | null;\n};\n\nexport default class SharedElementRendererData\n  implements ISharedElementRendererData {\n  private scenes: SceneRoute[] = [];\n  private updateSubscribers = new Set<SharedElementRendererUpdateHandler>();\n  private sharedElements: SharedElementsStrictConfig | null = null;\n  private isShowing: boolean = true;\n  private animValue: SharedElementAnimatedValue;\n  private route: Route | null = null;\n  private prevRoute: Route | null = null;\n  private scene: SharedElementSceneData | null = null;\n  private prevScene: SharedElementSceneData | null = null;\n\n  startTransition(\n    animValue: SharedElementAnimatedValue,\n    route: Route,\n    // @ts-ignore\n    prevRoute: Route //eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    //console.log('startTransition, route: ', route.key);\n    this.animValue = animValue;\n    this.prevRoute = this.route;\n    this.route = route;\n    this.updateSceneListeners();\n    this.updateSharedElements();\n  }\n\n  endTransition(\n    // @ts-ignore\n    route: Route, //eslint-disable-line @typescript-eslint/no-unused-vars\n    // @ts-ignore\n    prevRoute: Route //eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    //console.log('endTransition, route: ', route.key);\n    if (this.prevRoute != null) {\n      this.prevRoute = null;\n      this.animValue = null;\n      this.updateSceneListeners();\n      this.updateSharedElements();\n    }\n  }\n\n  willActivateScene(sceneData: SharedElementSceneData, route: Route): void {\n    //console.log('willActivateScene, route: ', route.key);\n    this.registerScene(sceneData, route);\n  }\n\n  didActivateScene(sceneData: SharedElementSceneData, route: Route): void {\n    //console.log('didActivateScene, route: ', route.key);\n    this.route = route;\n    this.prevRoute = null;\n    this.registerScene(sceneData, route);\n  }\n\n  private registerScene(sceneData: SharedElementSceneData, route: Route) {\n    this.scenes.push({\n      scene: sceneData,\n      route,\n      subscription: null,\n    });\n    if (this.scenes.length > 5) {\n      const { subscription } = this.scenes[0];\n      this.scenes.splice(0, 1);\n      if (subscription) subscription.remove();\n    }\n    this.updateSceneListeners();\n    this.updateSharedElements();\n  }\n\n  private updateSceneListeners() {\n    this.scenes.forEach(sceneRoute => {\n      const { scene, route, subscription } = sceneRoute;\n      const isActive =\n        (this.route && this.route.key === route.key) ||\n        (this.prevRoute && this.prevRoute.key === route.key);\n      if (isActive && !subscription) {\n        sceneRoute.subscription = scene.addUpdateListener(() => {\n          // TODO optimize\n          this.emitUpdateEvent();\n        });\n      } else if (!isActive && subscription) {\n        sceneRoute.subscription = null;\n        subscription.remove();\n      }\n    });\n  }\n\n  private updateSharedElements() {\n    const { route, prevRoute, animValue } = this;\n    const sceneRoute = route\n      ? this.scenes.find(sc => sc.route.key === route.key)\n      : undefined;\n    const prevSceneRoute = prevRoute\n      ? this.scenes.find(sc => sc.route.key === prevRoute.key)\n      : undefined;\n    const scene = sceneRoute ? sceneRoute.scene : null;\n    const prevScene = prevSceneRoute ? prevSceneRoute.scene : null;\n\n    // Update current scene & previous scene\n    if (scene === this.scene && prevScene === this.prevScene) return;\n    this.scene = scene;\n    this.prevScene = prevScene;\n\n    // Update shared elements\n    let sharedElements: SharedElementsStrictConfig | null = null;\n    let isShowing = true;\n    if (animValue && scene && prevScene) {\n      sharedElements = getSharedElements(scene, prevScene, true);\n      if (!sharedElements) {\n        isShowing = false;\n        sharedElements = getSharedElements(prevScene, scene, false);\n      }\n    }\n    if (this.sharedElements !== sharedElements) {\n      this.sharedElements = sharedElements;\n      this.isShowing = isShowing;\n      /*console.log(\n        'updateSharedElements: ',\n        sharedElements,\n        ' ,isShowing: ',\n        isShowing\n      );*/\n      this.emitUpdateEvent();\n    }\n  }\n\n  addUpdateListener(\n    handler: SharedElementRendererUpdateHandler\n  ): SharedElementEventSubscription {\n    this.updateSubscribers.add(handler);\n    return {\n      remove: () => this.updateSubscribers.delete(handler),\n    };\n  }\n\n  private emitUpdateEvent(): void {\n    this.updateSubscribers.forEach(handler => handler());\n  }\n\n  getTransitions(): SharedElementTransitionProps[] {\n    const { sharedElements, prevScene, scene, isShowing, animValue } = this;\n    // console.log('getTransitions: ', sharedElements);\n    if (!sharedElements || !scene || !prevScene) return NO_SHARED_ELEMENTS;\n    return sharedElements.map(({ id, otherId, ...other }) => {\n      const startId = isShowing ? otherId || id : id;\n      const endId = isShowing ? id : otherId || id;\n      return {\n        position: animValue,\n        start: {\n          ancestor: (prevScene ? prevScene.getAncestor() : undefined) || null,\n          node: (prevScene ? prevScene.getNode(startId) : undefined) || null,\n        },\n        end: {\n          ancestor: (scene ? scene.getAncestor() : undefined) || null,\n          node: (scene ? scene.getNode(endId) : undefined) || null,\n        },\n        ...other,\n      };\n    });\n  }\n}\n"]}